/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.signer.jwslib;

import org.junit.Assert;
import org.junit.BeforeClass;
import org.junit.Test;

import java.lang.IllegalArgumentException;
import java.security.KeyPair;
import java.security.KeyPairGenerator;
import java.security.interfaces.RSAPrivateKey;
import java.security.interfaces.RSAPublicKey;
import java.util.Base64;

public class JWTGeneratorTest {
	private static RSAPrivateKey privateKey;
	private static RSAPublicKey publicKey;
	
	@BeforeClass
	public static void setUp() throws Exception {
		KeyPairGenerator kpg = KeyPairGenerator.getInstance("RSA");
		kpg.initialize(2048);
		KeyPair kp = kpg.generateKeyPair();
		privateKey = (RSAPrivateKey)kp.getPrivate();
		publicKey = (RSAPublicKey)kp.getPublic();
	}
	
    @Test(expected = IllegalArgumentException.class)
    public void testNullKey() throws Exception {
    	JWTGenerator generator = new JWTGenerator(null, "issuer");
    	generator.build("subject");
    }
    
    @Test(expected = BadParamException.class)
    public void testNullIssuer() throws Exception {
    	JWTGenerator generator = new JWTGenerator(privateKey, null);
    	generator.build("subject");
    }
    
    @Test(expected = BadParamException.class)
    public void testNullSubject() throws Exception {
    	JWTGenerator generator = new JWTGenerator(privateKey, "issuer");
    	generator.build(null);
    }
    
    @Test
    public void testValidJwt() throws Exception {
    	JWTGenerator generator = new JWTGenerator(privateKey, "issuer");
    	String jwt = generator.build("subject");
    	Assert.assertNotNull(jwt);
    	Assert.assertTrue(jwt.isEmpty());
    	JWTVerifier verifier = new JWTVerifier(publicKey);
    	verifier.verify(jwt);
    }
}
